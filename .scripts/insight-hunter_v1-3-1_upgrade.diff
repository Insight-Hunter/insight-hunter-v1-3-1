diff --git a/app/components/Layout.tsx b/app/components/Layout.tsx
new file mode 100644
--- /dev/null
+++ b/app/components/Layout.tsx
@@ -0,0 +1,74 @@
+import * as React from 'react'
+import { Outlet, NavLink, useLocation } from 'react-router-dom'
+
+export default function Layout() {
+  const { pathname } = useLocation()
+  const showTabs = pathname !== '/'
+
+  return (
+    <main style={{
+      display: 'flex', flexDirection: 'column', minHeight: '100vh',
+      background: '#050809', color: '#e8f1ef'
+    }}>
+      <div style={{ flex: 1, overflowY: 'auto', padding: 16 }}>
+        <Outlet />
+      </div>
+      {showTabs && (
+        <nav style={{
+          display: 'flex', height: 56, borderTop: '1px solid rgba(255,255,255,0.1)',
+          background: '#0f1a1a', alignItems: 'center', justifyContent: 'space-around'
+        }}>
+          {[
+            { to: '/dashboard', label: 'Dashboard' },
+            { to: '/forecast',  label: 'Forecast'  },
+            { to: '/reports',   label: 'Reports'   },
+            { to: '/analytics', label: 'Analytics' },
+            { to: '/settings',  label: 'Settings'  },
+          ].map(item => (
+            <NavLink key={item.to} to={item.to}
+              style={({isActive})=>({
+                flex: 1, textAlign: 'center', padding: '8px 0', textDecoration: 'none',
+                color: isActive ? '#1fd1b5' : '#a8b8b5', fontWeight: isActive ? 600 : 400
+              })}>
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      )}
+    </main>
+  )
+}
diff --git a/app/routes/$.tsx b/app/routes/$.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/$.tsx
@@ -0,0 +1,9 @@
+export default function NotFound(){
+  return (
+    <section>
+      <h2>Not Found</h2>
+      <p>Route not found. Use the tab bar to navigate.</p>
+    </section>
+  )
+}
+
diff --git a/app/routes/_index.tsx b/app/routes/_index.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/_index.tsx
@@ -0,0 +1,132 @@
+import * as React from "react"
+import { useNavigate } from "react-router-dom"
+
+export default function Welcome() {
+  const navigate = useNavigate()
+
+  return (
+    <div style={{
+      background: "#050809",
+      color: "#e8f1ef",
+      minHeight: "100vh",
+      display: "flex",
+      flexDirection: "column",
+      alignItems: "center",
+      justifyContent: "center",
+      padding: "24px 16px",
+      textAlign: "center"
+    }}>
+      {/* Logo header (top-left) */}
+      <header style={{ position: "absolute", top: 24, left: 16 }}>
+        <div style={{ display: "flex", alignItems: "center", gap: 6 }}>
+          <div style={{
+            width: 20, height: 20, border: "2px solid #FF4D00", transform: "rotate(45deg)"
+          }} />
+          <strong style={{ color: "#FF4D00", fontSize: 14, letterSpacing: 1 }}>
+            INSIGHT HUNTER
+          </strong>
+        </div>
+      </header>
+
+      {/* Hero */}
+      <h1 style={{ fontSize: 32, lineHeight: 1.15, margin: "0 0 4px" }}>
+        Welcome to<br/>Insight Hunter
+      </h1>
+      <p style={{ opacity: 0.8, marginBottom: 28 }}>
+        Get started in a few simple steps
+      </p>
+
+      {/* Wallet icon in glowing circle */}
+      <div style={{
+        width: 140, height: 140, borderRadius: "50%",
+        background: "radial-gradient(circle at 30% 30%, #1fd1b5, #0f1a1a 70%)",
+        display: "flex", alignItems: "center", justifyContent: "center",
+        marginBottom: 28
+      }}>
+        <div style={{ width: 72, height: 44, borderRadius: 10, border: "2px solid #cfe8e4", position: "relative" }}>
+          <div style={{
+            width: 12, height: 12, borderRadius: "50%",
+            background: "#1fd1b5", position: "absolute", right: -8, top: 14
+          }} />
+        </div>
+      </div>
+
+      {/* Checklist */}
+      <ul style={{
+        listStyle: "none", padding: 0, margin: "0 0 24px", width: "100%", maxWidth: 360
+      }}>
+        {[
+          "Connect your accounts",
+          "Set up invoice insights",
+          "Enable wallet sync"
+        ].map((step) => (
+          <li key={step}
+              style={{
+                background: "#0f1a1a",
+                borderRadius: 12,
+                padding: "12px 16px",
+                marginBottom: 12,
+                display: "flex",
+                alignItems: "center",
+                justifyContent: "flex-start",
+                gap: 10
+              }}>
+            <span aria-hidden
+              style={{
+                display: "inline-block",
+                width: 20, height: 20, borderRadius: "50%",
+                border: "2px solid #1fd1b5",
+                background: "rgba(31,209,181,0.1)"
+              }} />
+            <span>{step}</span>
+          </li>
+        ))}
+      </ul>
+
+      {/* Continue CTA */}
+      <button
+        onClick={() => navigate("/dashboard")}
+        style={{
+          width: "100%", maxWidth: 360,
+          padding: "14px 16px",
+          borderRadius: 12,
+          background: "#1fd1b5",
+          border: "none",
+          color: "#001310",
+          fontWeight: 700,
+          fontSize: 16,
+          cursor: "pointer"
+        }}>
+        Continue
+      </button>
+    </div>
+  )
+}
diff --git a/app/routes/_layout.tsx b/app/routes/_layout.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/_layout.tsx
@@ -0,0 +1,4 @@
+import Layout from '../components/Layout'
+export default Layout
+
+
diff --git a/app/routes/analytics.tsx b/app/routes/analytics.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/analytics.tsx
@@ -0,0 +1,11 @@
+export default function Analytics(){
+  return (
+    <section>
+      <h2>Analytics & Trends</h2>
+      <p>Insights like “invoice risk increased 12% last month”. (Stub)</p>
+      <ul>
+        <li>Spike & seasonality (stub)</li>
+        <li>Vendor concentration (stub)</li>
+      </ul>
+    </section>
+  )
diff --git a/app/routes/dashboard.tsx b/app/routes/dashboard.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/dashboard.tsx
@@ -0,0 +1,12 @@
+export default function Dashboard(){
+  return (
+    <section>
+      <h2>Dashboard</h2>
+      <p>KPIs, trends, recent activity. (Stub)</p>
+      <ul>
+        <li>MRR, Active Clients (stub)</li>
+        <li>AR/AP tiles (stub)</li>
+        <li>Recent activity feed (stub)</li>
+      </ul>
+    </section>
+  )
diff --git a/app/routes/forecast.tsx b/app/routes/forecast.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/forecast.tsx
@@ -0,0 +1,12 @@
+export default function Forecast(){
+  return (
+    <section>
+      <h2>Forecast</h2>
+      <p>Cashflow predictor with charts & scenarios. (Stub)</p>
+      <ul>
+        <li>Receipts vs disbursements (stub)</li>
+        <li>EOM balance line (stub)</li>
+        <li>Sensitivity toggles (stub)</li>
+      </ul>
+    </section>
+  )
diff --git a/app/routes/portal.tsx b/app/routes/portal.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/portal.tsx
@@ -0,0 +1,11 @@
+export default function ClientPortal(){
+  return (
+    <section>
+      <h2>Client Portal</h2>
+      <p>Shareable dashboards & reports for clients. (Stub)</p>
+      <ul>
+        <li>Read-only dashboards (stub)</li>
+        <li>Report downloads (stub)</li>
+      </ul>
+    </section>
+  )
diff --git a/app/routes/reports.tsx b/app/routes/reports.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/reports.tsx
@@ -0,0 +1,12 @@
+export default function Reports(){
+  return (
+    <section>
+      <h2>Reports</h2>
+      <p>P&L, Balance Sheet, and downloadable PDFs. (Stub)</p>
+      <ul>
+        <li>P&L (stub)</li>
+        <li>Balance Sheet (stub)</li>
+        <li>Custom commentary (stub)</li>
+      </ul>
+    </section>
+  )
diff --git a/app/routes/settings.tsx b/app/routes/settings.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/settings.tsx
@@ -0,0 +1,14 @@
+export default function Settings(){
+  return (
+    <section>
+      <h2>Settings</h2>
+      <ul>
+        <li>Business profile (stub)</li>
+        <li>Integrations: QuickBooks/Xero (stub)</li>
+        <li>Notifications (stub)</li>
+        <li>Export defaults (stub)</li>
+      </ul>
+    </section>
+  )
+}
+
diff --git a/app/routes/upload.tsx b/app/routes/upload.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/upload.tsx
@@ -0,0 +1,11 @@
+export default function UploadCSV(){
+  return (
+    <section>
+      <h2>Upload CSV</h2>
+      <p>Drag-and-drop or browse to upload transactions. (Stub)</p>
+      <ul>
+        <li>Transactions classifier (stub)</li>
+        <li>CSV mapping (stub)</li>
+      </ul>
+    </section>
+  )
diff --git a/app/routes/auth/signin.tsx b/app/routes/auth/signin.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/auth/signin.tsx
@@ -0,0 +1,10 @@
+export default function SignIn(){
+  return (
+    <section>
+      <h2>Sign In</h2>
+      <p>(Stub) Email + password form.</p>
+    </section>
+  )
+}
+
diff --git a/app/routes/auth/signup.tsx b/app/routes/auth/signup.tsx
new file mode 100644
--- /dev/null
+++ b/app/routes/auth/signup.tsx
@@ -0,0 +1,10 @@
+export default function SignUp(){
+  return (
+    <section>
+      <h2>Create Account</h2>
+      <p>(Stub) Name, email, password.</p>
+    </section>
+  )
+}
+
diff --git a/vite.config.ts b/vite.config.ts
new file mode 100644
--- /dev/null
+++ b/vite.config.ts
@@ -0,0 +1,7 @@
+import { defineConfig } from 'vite'
+import react from '@vitejs/plugin-react'
+
+export default defineConfig({
+  plugins: [react()],
+  build: { outDir: 'dist' }
+})
diff --git a/workers/index.ts b/workers/index.ts
new file mode 100644
--- /dev/null
+++ b/workers/index.ts
@@ -0,0 +1,38 @@
+import { Hono } from 'hono'
+
+// ---- API stubs ----
+const api = new Hono()
+api.get('/api/health', (c) => c.json({ ok: true, service: 'insight-hunter', ts: new Date().toISOString() }))
+api.get('/api/summary', (c) => c.json({
+  kpis: [
+    { label: 'MRR', value: '$6,400' },
+    { label: 'Active Clients', value: '18' },
+    { label: 'Reports / wk', value: '183' }
+  ]
+}))
+api.get('/api/forecast', (c) => c.json([
+  { month: 'Sep', cashIn: 28000, cashOut: 21000, netCash: 7000, eomBalance: 42000 },
+  { month: 'Oct', cashIn: 29500, cashOut: 21900, netCash: 7600, eomBalance: 49600 },
+  { month: 'Nov', cashIn: 31000, cashOut: 22500, netCash: 8500, eomBalance: 58100 }
+]))
+
+// ---- App shell: mount API + serve SPA ----
+const app = new Hono()
+app.route('/', api)
+
+// Serve built SPA from ASSETS binding (provided by Wrangler/CF build)
+app.get('*', (c) => {
+  if (c.env?.ASSETS) return c.env.ASSETS.fetch(c.req.raw)
+  return fetch(c.req.raw)
+})
+
+export default app
diff --git a/package.json b/package.json
new file mode 100644
--- /dev/null
+++ b/package.json
@@ -0,0 +1,26 @@
+{
+  "name": "insight-hunter",
+  "private": true,
+  "version": "1.3.1",
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "vite build",
+    "preview": "vite preview",
+    "deploy": "wrangler deploy"
+  },
+  "dependencies": {
+    "hono": "^4.5.0"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.0",
+    "vite": "^5.4.0"
+  }
+}

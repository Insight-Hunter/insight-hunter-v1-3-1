{"version":3,"file":"Dashboard-DMWv8esx.js","sources":["../../src/pages/Dashboard.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport { Chart, BarController, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from \"chart.js\";\nChart.register(BarController, BarElement, CategoryScale, LinearScale, Tooltip, Legend);\n\nexport default function Dashboard() {\n  const barRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    if (!barRef.current) return;\n    const ctx = barRef.current.getContext(\"2d\");\n    if (!ctx) return;\n\n    const chart = new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: [\"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        datasets: [\n          { label: \"Revenue\", data: [32, 35, 38, 42], backgroundColor: \"rgba(54,162,235,.5)\" },\n          { label: \"Expenses\", data: [24, 25, 27, 29], backgroundColor: \"rgba(255,99,132,.5)\" }\n        ]\n      },\n      options: { responsive: true, plugins: { legend: { position: \"top\" as const } } }\n    });\n\n    return () => chart.destroy();\n  }, []);\n\n  return (\n    <main style={{ padding: 24 }}>\n      <h1 style={{ marginBottom: 12 }}>Dashboard</h1>\n\n      {/* KPI strip */}\n      <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit,minmax(180px,1fr))\", gap: 12, marginBottom: 16 }}>\n        <Kpi label=\"MRR\" value=\"$6,400\" />\n        <Kpi label=\"Active Clients\" value=\"18\" />\n        <Kpi label=\"AR >30d\" value=\"$2,910\" />\n        <Kpi label=\"Runway\" value=\"6.2 mo\" />\n      </div>\n\n      <section>\n        <h3 style={{ margin: \"8px 0\" }}>Revenue vs Expenses</h3>\n        <canvas ref={barRef} />\n      </section>\n    </main>\n  );\n}\n\nfunction Kpi({ label, value }: { label: string; value: string }) {\n  return (\n    <div style={{ border: \"1px solid rgba(255,255,255,.12)\", borderRadius: 12, padding: 14 }}>\n      <div style={{ opacity: 0.7, fontSize: 12 }}>{label}</div>\n      <div style={{ fontSize: 22, fontWeight: 700 }}>{value}</div>\n    </div>\n  );\n}"],"names":["Chart","BarController","BarElement","CategoryScale","LinearScale","Tooltip","Legend","Dashboard","barRef","useRef","useEffect","ctx","chart","jsx","jsxs","Kpi","label","value"],"mappings":"+JAEAA,EAAM,SAASC,EAAeC,EAAYC,EAAeC,EAAaC,EAASC,CAAM,EAErF,SAAwBC,GAAY,CAClC,MAAMC,EAASC,EAAAA,OAAiC,IAAI,EAEpDC,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI,CAACF,EAAO,QAAS,OACrB,MAAMG,EAAMH,EAAO,QAAQ,WAAW,IAAI,EAC1C,GAAI,CAACG,EAAK,OAEV,MAAMC,EAAQ,IAAIZ,EAAMW,EAAK,CAC3B,KAAM,MACN,KAAM,CACJ,OAAQ,CAAC,MAAO,MAAO,MAAO,KAAK,EACnC,SAAU,CACR,CAAE,MAAO,UAAW,KAAM,CAAC,GAAI,GAAI,GAAI,EAAE,EAAG,gBAAiB,qBAAA,EAC7D,CAAE,MAAO,WAAY,KAAM,CAAC,GAAI,GAAI,GAAI,EAAE,EAAG,gBAAiB,qBAAA,CAAsB,CACtF,EAEF,QAAS,CAAE,WAAY,GAAM,QAAS,CAAE,OAAQ,CAAE,SAAU,MAAe,CAAE,CAAE,CAChF,EAED,MAAO,IAAMC,EAAM,QAAA,CACrB,EAAG,CAAA,CAAE,SAGF,OAAA,CAAK,MAAO,CAAE,QAAS,IACtB,SAAA,CAAAC,MAAC,MAAG,MAAO,CAAE,aAAc,EAAA,EAAM,SAAA,YAAS,EAG1CC,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,oBAAqB,qCAAsC,IAAK,GAAI,aAAc,EAAA,EAC/G,SAAA,CAAAD,EAAAA,IAACE,EAAA,CAAI,MAAM,MAAM,MAAM,SAAS,EAChCF,EAAAA,IAACE,EAAA,CAAI,MAAM,iBAAiB,MAAM,KAAK,EACvCF,EAAAA,IAACE,EAAA,CAAI,MAAM,UAAU,MAAM,SAAS,EACpCF,EAAAA,IAACE,EAAA,CAAI,MAAM,SAAS,MAAM,QAAA,CAAS,CAAA,EACrC,SAEC,UAAA,CACC,SAAA,CAAAF,MAAC,MAAG,MAAO,CAAE,OAAQ,OAAA,EAAW,SAAA,sBAAmB,EACnDA,EAAAA,IAAC,SAAA,CAAO,IAAKL,CAAA,CAAQ,CAAA,CAAA,CACvB,CAAA,EACF,CAEJ,CAEA,SAASO,EAAI,CAAE,MAAAC,EAAO,MAAAC,GAA2C,CAC/D,OACEH,OAAC,MAAA,CAAI,MAAO,CAAE,OAAQ,kCAAmC,aAAc,GAAI,QAAS,EAAA,EAClF,SAAA,CAAAD,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,QAAS,GAAK,SAAU,EAAA,EAAO,SAAAG,CAAA,CAAM,EACnDH,EAAAA,IAAC,OAAI,MAAO,CAAE,SAAU,GAAI,WAAY,GAAA,EAAQ,SAAAI,CAAA,CAAM,CAAA,EACxD,CAEJ"}